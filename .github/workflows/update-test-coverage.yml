name: Update Tests Coverage

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name: Go test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: server/coverage.out

      - name: Run tests and generate coverage badge
        id: badge
        run: |
          cd server
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Coverage: $COVERAGE"
          
          COLOR="gray"
          if (( $(echo "$COVERAGE < 50" | bc -l) )); then
            COLOR="red"
          elif (( $(echo "$COVERAGE >= 50 && $COVERAGE < 80" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 80 && $COVERAGE < 90" | bc -l) )); then
            COLOR="green"
          elif (( $(echo "$COVERAGE >= 90" | bc -l) )); then
            COLOR="brightgreen"
          fi
          
          
          cd ..
          BADGE_MARKDOWN="![Coverage Badge](https://img.shields.io/badge/Coverage-${COVERAGE}%25-${COLOR}.svg)"
          sed -i "s|!\[Coverage Badge\](.*)|$BADGE_MARKDOWN|g" README.md

      - name: Commit coverage badge
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Update coverage badge to $COVERAGE%"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
